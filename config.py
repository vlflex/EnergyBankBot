from pydantic_settings import BaseSettings, SettingsConfigDict
from pydantic import SecretStr
from cryptography.fernet import Fernet
from string import Template
from logging import DEBUG, INFO
from typing import Dict, List

class Settings(BaseSettings):
    bot_token: SecretStr
    email: SecretStr
    password: SecretStr
    domain: SecretStr
    port: SecretStr
    code_key: SecretStr
    bot_url: SecretStr
    db_name: SecretStr
    db_user: SecretStr
    db_pass: SecretStr
    db_host: SecretStr
    db_port: SecretStr
    model_config = SettingsConfigDict(env_file = 'data/.env', 
                                    env_file_encoding = 'utf-8')
    
config = Settings() # type: ignore

# –æ–±—â–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Ä–æ–≤–Ω—è –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è 
LOG_LEVEL =  INFO
# –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
PATH = 'D:/–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç/–£—á–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞/Bank bot'
# —Ç–∞–π–º–µ—Ä –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏ email code (sec)
CODE_COOLDOWN = 180
# —á–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫ –¥–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
CODE_ATTEMPTS = 5

# URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä—Å–µ –≤–∞–ª—é—Ç
CURRENCY_QUERY_URL = f'http://www.cbr.ru/scripts/XML_daily.asp'
# —Ä—É–±–ª—å
RUB = 'RUBüá∑üá∫'
# –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –Ω–æ–º–∏–Ω–∞–ª, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –¥–µ–ª–∏—Ç—Å—è –∫—É—Ä—Å
MAX_NOMINAL = 100

# –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
TRANS_PAGE_COUNT = 10
# —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Ç–æ—Ä–∏–∏
TRANS_DATE_FORMAT = "%d/%m/%Y %H:%M:%S"
# —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –≤ PSQL
TRANS_DATE_SQL_FORMAT = "%Y-%m-%d %H:%M:%S.%f"
# –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
TRANS_TABLE_HEADERS = ["–¢–∏–ø", '–°—É–º–º–∞', '–ò—Å—Ç–æ—á–Ω–∏–∫', '–î–∞—Ç–∞', '–û–ø–∏—Å–∞–Ω–∏–µ']

# —Å–ª–æ–≤–∞—Ä–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
messages_dict: Dict[str, str | Template] = {
    'greet': Template(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, $name! –í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ'),
    'unauth_greet': Template(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, $name! –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã, –≤—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: '),
    'reg_offer': '–ö–∞–∂–µ—Ç—Å—è, –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é?',
    'reg_success': '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≤—Ö–æ–¥–∞',
    'reg_fail': '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –∫–∞–∂–µ—Ç—Å—è —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:()',
    'auth_offer': '–ö–∞–∂–µ—Ç—Å—è, –≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, —Ö–æ—Ç–∏—Ç–µ –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç?',
    'pin_request': '–í–≤–µ–¥–∏—Ç–µ pin-code',
    'pin_create': '–ü—Ä–∏–¥—É–º–∞–π—Ç–µ pin-code –∏–∑ 4 —Ü–∏—Ñ—Ä, –æ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
    'invalid_pin': '–ù–µ–≤–µ—Ä–Ω—ã–π pin-code, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑',
    'email_request': '–í–≤–µ–¥–∏—Ç–µ email –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞:',
    'email_accepted': 'Email –ø—Ä–∏–Ω—è—Ç',
    'invalid_email': '–ù–µ–≤–µ—Ä–Ω—ã–π email, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑',
    'code_send': '–ù–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã–π email –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
    'code_request': '–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥ –∏–∑ 6 —Ü–∏—Ñ—Ä',
    'code_error': '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π email',
    'code_accepted': '–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∏–Ω—è—Ç',
    'invalid_code': '–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑',
    'restore_success': '–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ pin-code. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≤—Ö–æ–¥–∞',
    'restore_fail': '–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ pin-–∫–æ–¥–∞, –∫–∞–∂–µ—Ç—Å—è —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:()',
    'multiple_invalid_code': Template(f'–í—ã –≤–≤–µ–ª–∏ –∫–æ–¥ –Ω–µ–≤–µ—Ä–Ω–æ {CODE_ATTEMPTS} —Ä–∞–∑. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start. –ò–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑: <b>$time</b>'),
    'multiple_invalid_pin': Template(f'–í—ã –≤–≤–µ–ª–∏ pin-–∫–æ–¥ –Ω–µ–≤–µ—Ä–Ω–æ {CODE_ATTEMPTS} —Ä–∞–∑.\n–í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å pin-code, —á–µ—Ä–µ–∑ email (–±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è).\n–õ–∏–±–æ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑: <b>$time</b>'),
    'menu_balance': Template(f'–í–∞—à –±–∞–ª–∞–Ω—Å: <b>$balance‚ÇΩ</b>'),  # type: ignore
    'command_refuse': '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–º–∞–Ω–¥—É –¥–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start',
    'pay_target_choice': '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –ø–ª–∞—Ç–µ–∂–∞',
    'pay_self_refuse': '–û—à–∏–±–∫–∞: –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–ª–∞—Ç–µ–∂ —Å–µ–±–µ',
    'pay_target_no_client': '–û—à–∏–±–∫–∞: –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –Ω–∞—à–µ–≥–æ –±–∞–Ω–∫–∞',
    'pay_target_accepted': '–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤',
    'pay_amount': '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞',
    'pay_input_invalid': '–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞',
    'pay_input_nomoney': '–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: –Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤: /balance',
    'pay_attempt': '–ü–æ–ø—ã—Ç–∫–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞..',
    'pay_input_success': '–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω',
    'pay_input_fail': '–û—à–∏–±–∫–∞ –ø–ª–∞—Ç–µ–∂–∞: –∫–∞–∂–µ—Ç—Å—è —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:()',
    'pay_transaction_sender': Template('–ü–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç ‚Ññ$getter'),
    'pay_transaction_getter': Template('–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ —Å–æ —Å—á–µ—Ç–∞ ‚Ññ$sender'),
    'currency_choose': '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É',
    'currency_result': Template('–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è <i>$other_name</i>:\n<b>$other_nominal</b> $other_currency\t=\t<b>$our_nominal</b> $our_currency'),
    'currency_error': '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å',\
    'currency_input': '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã –∏–∑ 3 –±—É–∫–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä "USD")',
    'currency_input_fail': '–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –æ –≤–∞–ª—é—Ç–µ –Ω–µ –±—ã–ª–∏ –Ω–∞–π–¥–µ–Ω—ã',
    'currency_rub': '–û—à–∏–±–∫–∞: –Ω–µ–ª—å–∑—è –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å —Ä—É–±–ª—è –≤ —Ä—É–±–ª—è—Ö',
}
# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ–≤–∞—Ä—è –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ email —Ñ–æ—Ä–º—É
def create_email_form(email: str, code: int, registration: bool = True) -> Dict[str, str]:
    email_form: Dict[str, str] = {
        'from_field':'EnergyBank',
        'target_email':email,
        'subject':'–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã',
        'text':
            f'–ö—Ç–æ-—Ç–æ –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ <a href = {config.bot_url.get_secret_value()}>telegram –±–æ—Ç–∞</a><br>–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: <h1>{code}</h1>' if registration else
            f'–ö—Ç–æ-—Ç–æ –ø—ã—Ç–∞–µ—Ç—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É —Å –ø–æ–º–æ—â—å—é –≤–∞—à–µ–≥–æ email —á–µ—Ä–µ–∑ <a href = {config.bot_url.get_secret_value()}>telegram –±–æ—Ç–∞</a><br>–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: <h1>{code}</h1>'
    }
    return email_form

buttons_dict: Dict[str, str] = {
    'reg': '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
    'auth': '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è',
    'send_code': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥',
    'input_email': '–í–≤–µ—Å—Ç–∏ email',
    'input_pin': '–í–≤–µ—Å—Ç–∏ pin-–∫–æ–¥',
    'email_restore': '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ email',
    'pay': '–ü–µ—Ä–µ–≤–æ–¥üí±',
    'pay_target': '–í—ã–±—Ä–∞—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—èüí≥',
    'balance': '–ë–∞–ª–∞–Ω—Åüí∞',
    'history': '–ò—Å—Ç–æ—Ä–∏—èüí∏',
    'currency': '–í–∞–ª—é—Ç—ãüí≤',
    'calculator': '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—ÄüßÆ',
    'settings': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öô',
    'menu': '–ú–µ–Ω—éüß©',
    'curency_other': '–î—Ä—É–≥–∏–µ –≤–∞–ª—é—Ç—ã',
}

# —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–¥–∏—Ä–æ–≤–æ–∫ –≤–∞–ª—é—Ç
currencies_dict: Dict[str, str] = {
    'USD':'USDüá∫üá∏',
    'EUR':'EURüá™üá∫',
    'CNY':'CNYüá®üá≥',
    'INR':'INRüáÆüá≥',
    'UAH':'UAHüá∫üá¶',
    'BYN':'BYNüáßüáæ',
    'KZT':'KZTüá∞üáø',
    'UZS':'UZSüá∫üáø',
    'JPY':'JPYüáØüáµ',
    'GBP':'GBPüá¨üáß',
    'AED':'AEDüá¶üá™',
    'TRY':'TRYüáπüá∑',
}

commands_list: List[str] = [
    "balance",
    "history",
    "pay",  
    "settings",
    "currency",
    "calculator",
]
# —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
def get_ciphered(data: str):
    """Ciphere the data"""
    data = data.encode('utf-8') # type: ignore
    # –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–∞
    key = config.code_key.get_secret_value()
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ Fernet —Å –∫–ª—é—á–æ–º
    cipher_suite = Fernet(key)
    return cipher_suite.encrypt(data).decode('utf-8') # type: ignore

# –¥–µ—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
def get_unciphered(cipherde_data: str):
    """Unciphere the data"""
    # –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–∞
    key = config.code_key.get_secret_value()
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ Fernet —Å –∫–ª—é—á–æ–º
    cipher_suite = Fernet(key)
    return cipher_suite.decrypt(cipherde_data).decode('utf-8')